

================================================================
== Vivado HLS Report for 'my_ip_hls_entry90'
================================================================
* Date:           Sun Apr 21 19:20:41 2019

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        my_ip_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z045ffg900-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.80|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|DSP              |        -|      -|       -|       -|
|Expression       |        -|      -|       0|       8|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|     126|
|Register         |        -|      -|       3|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       3|     134|
+-----------------+---------+-------+--------+--------+
|Available        |     1090|    900|  437200|  218600|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|   ~0   |   ~0   |
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------+----------+-------+---+----+------------+------------+
    |  Variable Name  | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------+----------+-------+---+----+------------+------------+
    |ap_block_state1  |    or    |      0|  0|   8|           1|           1|
    +-----------------+----------+-------+---+----+------------+------------+
    |Total            |          |      0|  0|   8|           1|           1|
    +-----------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +----------------------+----+-----------+-----+-----------+
    |         Name         | LUT| Input Size| Bits| Total Bits|
    +----------------------+----+-----------+-----+-----------+
    |ap_done               |   9|          2|    1|          2|
    |real_start            |   9|          2|    1|          2|
    |rule1_V_blk_n         |   9|          2|    1|          2|
    |rule1_V_out_blk_n     |   9|          2|    1|          2|
    |rule1cnt_V_blk_n      |   9|          2|    1|          2|
    |rule1cnt_V_out_blk_n  |   9|          2|    1|          2|
    |rule2_V_blk_n         |   9|          2|    1|          2|
    |rule2_V_out_blk_n     |   9|          2|    1|          2|
    |rule2cnt_V_blk_n      |   9|          2|    1|          2|
    |rule2cnt_V_out_blk_n  |   9|          2|    1|          2|
    |rule3_V_blk_n         |   9|          2|    1|          2|
    |rule3_V_out_blk_n     |   9|          2|    1|          2|
    |rule3cnt_V_blk_n      |   9|          2|    1|          2|
    |rule3cnt_V_out_blk_n  |   9|          2|    1|          2|
    +----------------------+----+-----------+-----+-----------+
    |Total                 | 126|         28|   14|         28|
    +----------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------+---+----+-----+-----------+
    |      Name      | FF| LUT| Bits| Const Bits|
    +----------------+---+----+-----+-----------+
    |ap_CS_fsm       |  1|   0|    1|          0|
    |ap_done_reg     |  1|   0|    1|          0|
    |start_once_reg  |  1|   0|    1|          0|
    +----------------+---+----+-----+-----------+
    |Total           |  3|   0|    3|          0|
    +----------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------------+-----+-----+------------+-------------------+--------------+
|       RTL Ports       | Dir | Bits|  Protocol  |   Source Object   |    C Type    |
+-----------------------+-----+-----+------------+-------------------+--------------+
|ap_clk                 |  in |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_rst                 |  in |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_start               |  in |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|start_full_n           |  in |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_done                | out |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_continue            |  in |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_idle                | out |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|ap_ready               | out |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|start_out              | out |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|start_write            | out |    1| ap_ctrl_hs | my_ip_hls.entry90 | return value |
|rule1_V_dout           |  in |   32|   ap_fifo  |      rule1_V      |    pointer   |
|rule1_V_empty_n        |  in |    1|   ap_fifo  |      rule1_V      |    pointer   |
|rule1_V_read           | out |    1|   ap_fifo  |      rule1_V      |    pointer   |
|rule2_V_dout           |  in |   32|   ap_fifo  |      rule2_V      |    pointer   |
|rule2_V_empty_n        |  in |    1|   ap_fifo  |      rule2_V      |    pointer   |
|rule2_V_read           | out |    1|   ap_fifo  |      rule2_V      |    pointer   |
|rule3_V_dout           |  in |   32|   ap_fifo  |      rule3_V      |    pointer   |
|rule3_V_empty_n        |  in |    1|   ap_fifo  |      rule3_V      |    pointer   |
|rule3_V_read           | out |    1|   ap_fifo  |      rule3_V      |    pointer   |
|rule1cnt_V_dout        |  in |   32|   ap_fifo  |     rule1cnt_V    |    pointer   |
|rule1cnt_V_empty_n     |  in |    1|   ap_fifo  |     rule1cnt_V    |    pointer   |
|rule1cnt_V_read        | out |    1|   ap_fifo  |     rule1cnt_V    |    pointer   |
|rule2cnt_V_dout        |  in |   32|   ap_fifo  |     rule2cnt_V    |    pointer   |
|rule2cnt_V_empty_n     |  in |    1|   ap_fifo  |     rule2cnt_V    |    pointer   |
|rule2cnt_V_read        | out |    1|   ap_fifo  |     rule2cnt_V    |    pointer   |
|rule3cnt_V_dout        |  in |   32|   ap_fifo  |     rule3cnt_V    |    pointer   |
|rule3cnt_V_empty_n     |  in |    1|   ap_fifo  |     rule3cnt_V    |    pointer   |
|rule3cnt_V_read        | out |    1|   ap_fifo  |     rule3cnt_V    |    pointer   |
|rule1_V_out_din        | out |   32|   ap_fifo  |    rule1_V_out    |    pointer   |
|rule1_V_out_full_n     |  in |    1|   ap_fifo  |    rule1_V_out    |    pointer   |
|rule1_V_out_write      | out |    1|   ap_fifo  |    rule1_V_out    |    pointer   |
|rule2_V_out_din        | out |   32|   ap_fifo  |    rule2_V_out    |    pointer   |
|rule2_V_out_full_n     |  in |    1|   ap_fifo  |    rule2_V_out    |    pointer   |
|rule2_V_out_write      | out |    1|   ap_fifo  |    rule2_V_out    |    pointer   |
|rule3_V_out_din        | out |   32|   ap_fifo  |    rule3_V_out    |    pointer   |
|rule3_V_out_full_n     |  in |    1|   ap_fifo  |    rule3_V_out    |    pointer   |
|rule3_V_out_write      | out |    1|   ap_fifo  |    rule3_V_out    |    pointer   |
|rule1cnt_V_out_din     | out |   32|   ap_fifo  |   rule1cnt_V_out  |    pointer   |
|rule1cnt_V_out_full_n  |  in |    1|   ap_fifo  |   rule1cnt_V_out  |    pointer   |
|rule1cnt_V_out_write   | out |    1|   ap_fifo  |   rule1cnt_V_out  |    pointer   |
|rule2cnt_V_out_din     | out |   32|   ap_fifo  |   rule2cnt_V_out  |    pointer   |
|rule2cnt_V_out_full_n  |  in |    1|   ap_fifo  |   rule2cnt_V_out  |    pointer   |
|rule2cnt_V_out_write   | out |    1|   ap_fifo  |   rule2cnt_V_out  |    pointer   |
|rule3cnt_V_out_din     | out |   32|   ap_fifo  |   rule3cnt_V_out  |    pointer   |
|rule3cnt_V_out_full_n  |  in |    1|   ap_fifo  |   rule3cnt_V_out  |    pointer   |
|rule3cnt_V_out_write   | out |    1|   ap_fifo  |   rule3cnt_V_out  |    pointer   |
+-----------------------+-----+-----+------------+-------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

 <State 1> : 6.80ns
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3cnt_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2cnt_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1cnt_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 14 [1/1] (3.40ns)   --->   "%rule1_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule1_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 15 [1/1] (3.40ns)   --->   "%rule2_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule2_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 16 [1/1] (3.40ns)   --->   "%rule3_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule3_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 17 [1/1] (3.40ns)   --->   "%rule1cnt_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule1cnt_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 18 [1/1] (3.40ns)   --->   "%rule2cnt_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule2cnt_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 19 [1/1] (3.40ns)   --->   "%rule3cnt_V_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %rule3cnt_V)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 21 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule1_V_out, i32 %rule1_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 23 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule2_V_out, i32 %rule2_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 25 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule3_V_out, i32 %rule3_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule1cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 27 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule1cnt_V_out, i32 %rule1cnt_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule2cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 29 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule2cnt_V_out, i32 %rule2cnt_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %rule3cnt_V_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_1 : Operation 31 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %rule3cnt_V_out, i32 %rule3cnt_V_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "ret void"


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 1
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ rule1_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule2_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule3_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule1cnt_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule2cnt_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule3cnt_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule1_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule2_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule3_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule1cnt_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule2cnt_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ rule3cnt_V_out]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_2      (specinterface) [ 00]
StgValue_3      (specinterface) [ 00]
StgValue_4      (specinterface) [ 00]
StgValue_5      (specinterface) [ 00]
StgValue_6      (specinterface) [ 00]
StgValue_7      (specinterface) [ 00]
StgValue_8      (specinterface) [ 00]
StgValue_9      (specinterface) [ 00]
StgValue_10     (specinterface) [ 00]
StgValue_11     (specinterface) [ 00]
StgValue_12     (specinterface) [ 00]
StgValue_13     (specinterface) [ 00]
rule1_V_read    (read         ) [ 00]
rule2_V_read    (read         ) [ 00]
rule3_V_read    (read         ) [ 00]
rule1cnt_V_read (read         ) [ 00]
rule2cnt_V_read (read         ) [ 00]
rule3cnt_V_read (read         ) [ 00]
StgValue_20     (specinterface) [ 00]
StgValue_21     (write        ) [ 00]
StgValue_22     (specinterface) [ 00]
StgValue_23     (write        ) [ 00]
StgValue_24     (specinterface) [ 00]
StgValue_25     (write        ) [ 00]
StgValue_26     (specinterface) [ 00]
StgValue_27     (write        ) [ 00]
StgValue_28     (specinterface) [ 00]
StgValue_29     (write        ) [ 00]
StgValue_30     (specinterface) [ 00]
StgValue_31     (write        ) [ 00]
StgValue_32     (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="rule1_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule1_V"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="rule2_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule2_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="rule3_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule3_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="rule1cnt_V">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule1cnt_V"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="rule2cnt_V">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule2cnt_V"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="rule3cnt_V">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule3cnt_V"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="rule1_V_out">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule1_V_out"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="rule2_V_out">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule2_V_out"/></StgValue>
</bind>
</comp>

<comp id="16" class="1000" name="rule3_V_out">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule3_V_out"/></StgValue>
</bind>
</comp>

<comp id="18" class="1000" name="rule1cnt_V_out">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule1cnt_V_out"/></StgValue>
</bind>
</comp>

<comp id="20" class="1000" name="rule2cnt_V_out">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule2cnt_V_out"/></StgValue>
</bind>
</comp>

<comp id="22" class="1000" name="rule3cnt_V_out">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rule3cnt_V_out"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ap_fifo_str"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.i32P"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_fifo.i32P"/></StgValue>
</bind>
</comp>

<comp id="40" class="1004" name="rule1_V_read_read_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="32" slack="0"/>
<pin id="42" dir="0" index="1" bw="32" slack="0"/>
<pin id="43" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule1_V_read/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="rule2_V_read_read_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="32" slack="0"/>
<pin id="48" dir="0" index="1" bw="32" slack="0"/>
<pin id="49" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule2_V_read/1 "/>
</bind>
</comp>

<comp id="52" class="1004" name="rule3_V_read_read_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="32" slack="0"/>
<pin id="54" dir="0" index="1" bw="32" slack="0"/>
<pin id="55" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule3_V_read/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="rule1cnt_V_read_read_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="32" slack="0"/>
<pin id="60" dir="0" index="1" bw="32" slack="0"/>
<pin id="61" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule1cnt_V_read/1 "/>
</bind>
</comp>

<comp id="64" class="1004" name="rule2cnt_V_read_read_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="0" index="1" bw="32" slack="0"/>
<pin id="67" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule2cnt_V_read/1 "/>
</bind>
</comp>

<comp id="70" class="1004" name="rule3cnt_V_read_read_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="32" slack="0"/>
<pin id="72" dir="0" index="1" bw="32" slack="0"/>
<pin id="73" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="rule3cnt_V_read/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="StgValue_21_write_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="0" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="0"/>
<pin id="79" dir="0" index="2" bw="32" slack="0"/>
<pin id="80" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_21/1 "/>
</bind>
</comp>

<comp id="84" class="1004" name="StgValue_23_write_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="0" slack="0"/>
<pin id="86" dir="0" index="1" bw="32" slack="0"/>
<pin id="87" dir="0" index="2" bw="32" slack="0"/>
<pin id="88" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_23/1 "/>
</bind>
</comp>

<comp id="92" class="1004" name="StgValue_25_write_fu_92">
<pin_list>
<pin id="93" dir="0" index="0" bw="0" slack="0"/>
<pin id="94" dir="0" index="1" bw="32" slack="0"/>
<pin id="95" dir="0" index="2" bw="32" slack="0"/>
<pin id="96" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_25/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="StgValue_27_write_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="0" slack="0"/>
<pin id="102" dir="0" index="1" bw="32" slack="0"/>
<pin id="103" dir="0" index="2" bw="32" slack="0"/>
<pin id="104" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_27/1 "/>
</bind>
</comp>

<comp id="108" class="1004" name="StgValue_29_write_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="0" slack="0"/>
<pin id="110" dir="0" index="1" bw="32" slack="0"/>
<pin id="111" dir="0" index="2" bw="32" slack="0"/>
<pin id="112" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_29/1 "/>
</bind>
</comp>

<comp id="116" class="1004" name="StgValue_31_write_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="0" slack="0"/>
<pin id="118" dir="0" index="1" bw="32" slack="0"/>
<pin id="119" dir="0" index="2" bw="32" slack="0"/>
<pin id="120" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_31/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="44"><net_src comp="36" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="45"><net_src comp="0" pin="0"/><net_sink comp="40" pin=1"/></net>

<net id="50"><net_src comp="36" pin="0"/><net_sink comp="46" pin=0"/></net>

<net id="51"><net_src comp="2" pin="0"/><net_sink comp="46" pin=1"/></net>

<net id="56"><net_src comp="36" pin="0"/><net_sink comp="52" pin=0"/></net>

<net id="57"><net_src comp="4" pin="0"/><net_sink comp="52" pin=1"/></net>

<net id="62"><net_src comp="36" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="6" pin="0"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="36" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="8" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="74"><net_src comp="36" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="10" pin="0"/><net_sink comp="70" pin=1"/></net>

<net id="81"><net_src comp="38" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="82"><net_src comp="12" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="83"><net_src comp="40" pin="2"/><net_sink comp="76" pin=2"/></net>

<net id="89"><net_src comp="38" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="90"><net_src comp="14" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="91"><net_src comp="46" pin="2"/><net_sink comp="84" pin=2"/></net>

<net id="97"><net_src comp="38" pin="0"/><net_sink comp="92" pin=0"/></net>

<net id="98"><net_src comp="16" pin="0"/><net_sink comp="92" pin=1"/></net>

<net id="99"><net_src comp="52" pin="2"/><net_sink comp="92" pin=2"/></net>

<net id="105"><net_src comp="38" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="106"><net_src comp="18" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="107"><net_src comp="58" pin="2"/><net_sink comp="100" pin=2"/></net>

<net id="113"><net_src comp="38" pin="0"/><net_sink comp="108" pin=0"/></net>

<net id="114"><net_src comp="20" pin="0"/><net_sink comp="108" pin=1"/></net>

<net id="115"><net_src comp="64" pin="2"/><net_sink comp="108" pin=2"/></net>

<net id="121"><net_src comp="38" pin="0"/><net_sink comp="116" pin=0"/></net>

<net id="122"><net_src comp="22" pin="0"/><net_sink comp="116" pin=1"/></net>

<net id="123"><net_src comp="70" pin="2"/><net_sink comp="116" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: rule1_V_out | {1 }
	Port: rule2_V_out | {1 }
	Port: rule3_V_out | {1 }
	Port: rule1cnt_V_out | {1 }
	Port: rule2cnt_V_out | {1 }
	Port: rule3cnt_V_out | {1 }
 - Input state : 
	Port: my_ip_hls.entry90 : rule1_V | {1 }
	Port: my_ip_hls.entry90 : rule2_V | {1 }
	Port: my_ip_hls.entry90 : rule3_V | {1 }
	Port: my_ip_hls.entry90 : rule1cnt_V | {1 }
	Port: my_ip_hls.entry90 : rule2cnt_V | {1 }
	Port: my_ip_hls.entry90 : rule3cnt_V | {1 }
	Port: my_ip_hls.entry90 : rule1_V_out | {}
	Port: my_ip_hls.entry90 : rule2_V_out | {}
	Port: my_ip_hls.entry90 : rule3_V_out | {}
	Port: my_ip_hls.entry90 : rule1cnt_V_out | {}
	Port: my_ip_hls.entry90 : rule2cnt_V_out | {}
	Port: my_ip_hls.entry90 : rule3cnt_V_out | {}
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|
| Operation|       Functional Unit      |
|----------|----------------------------|
|          |   rule1_V_read_read_fu_40  |
|          |   rule2_V_read_read_fu_46  |
|   read   |   rule3_V_read_read_fu_52  |
|          | rule1cnt_V_read_read_fu_58 |
|          | rule2cnt_V_read_read_fu_64 |
|          | rule3cnt_V_read_read_fu_70 |
|----------|----------------------------|
|          |   StgValue_21_write_fu_76  |
|          |   StgValue_23_write_fu_84  |
|   write  |   StgValue_25_write_fu_92  |
|          |  StgValue_27_write_fu_100  |
|          |  StgValue_29_write_fu_108  |
|          |  StgValue_31_write_fu_116  |
|----------|----------------------------|
|   Total  |                            |
|----------|----------------------------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+
|           |
+-----------+
|  Function |
|   Memory  |
|Multiplexer|
|  Register |
+-----------+
|   Total   |
+-----------+
